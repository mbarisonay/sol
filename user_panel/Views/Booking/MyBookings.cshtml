@model IEnumerable<user_panel.Data.Booking>

@{
    ViewData["Title"] = "My Bookings";
}

<div class="container container-main-large">
    <div class="card-custom">
        <h2 class="text-center">@ViewData["Title"]</h2>
        <p class="text-center text-muted mb-4">Here is a list of your past and upcoming reservations.</p>

        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                You have no bookings yet. Why not <a asp-action="Index" class="alert-link">book a cabin</a>?
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-dark table-hover">
                    <thead>
                        <tr>
                            <th>Location</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderByDescending(b => b.StartTime))
                        {
                            // ===================================================================
                            // === DYNAMIC STATUS LOGIC BASED ON YOUR RULES ===
                            // ===================================================================
                            var now = DateTime.UtcNow;
                            string statusLabel;
                            string statusClass;

                            if (now >= item.StartTime && now < item.EndTime)
                            {
                                statusLabel = "Active";
                                statusClass = "status-active";
                            }
                            else if (now >= item.EndTime) // Booking has passed
                            {
                                if (item.CheckInTime != null)
                                {
                                    statusLabel = "Gym-tired";
                                    statusClass = "status-used";
                                }
                                else
                                {
                                    statusLabel = "Couch potato";
                                    statusClass = "status-missed";
                                }
                            }
                            else // Booking is in the future
                            {
                                statusLabel = "Gym-thirsty";
                                statusClass = "status-upcoming";
                            }
                            // ===================================================================

                            <tr>
                                <td>@item.Cabin.Location</td>
                                <td>@item.StartTime.ToLocalTime().ToString("D")</td>
                                <td>@item.StartTime.ToLocalTime().ToString("t") - @item.EndTime.ToLocalTime().ToString("t")</td>
                                <td>
                                    <!-- The dynamic badge is rendered here -->
                                    <span class="badge @statusClass">@statusLabel</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>